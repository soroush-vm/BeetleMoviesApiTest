// <auto-generated />
using BeetleMovies;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeetleMovies.Migrations
{
    [DbContext(typeof(BeetleMoviesContext))]
    [Migration("20250905174327_SeedMoviesAndDirectors")]
    partial class SeedMoviesAndDirectors
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("BeetleMovies.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Steven Spielberg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Martin Scorsese"
                        },
                        new
                        {
                            Id = 5,
                            Name = "James Cameron"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ridley Scott"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Peter Jackson"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Francis Ford Coppola"
                        },
                        new
                        {
                            Id = 9,
                            Name = "David Fincher"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Clint Eastwood"
                        },
                        new
                        {
                            Id = 11,
                            Name = "George Lucas"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Tim Burton"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Woody Allen"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Sofia Coppola"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Wes Anderson"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Guillermo del Toro"
                        });
                });

            modelBuilder.Entity("BeetleMovies.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rating")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 8.0999999999999996,
                            Title = "Jurassic Park",
                            Year = 1993
                        },
                        new
                        {
                            Id = 2,
                            Rating = 8.8000000000000007,
                            Title = "Inception",
                            Year = 2010
                        },
                        new
                        {
                            Id = 3,
                            Rating = 8.9000000000000004,
                            Title = "Pulp Fiction",
                            Year = 1994
                        },
                        new
                        {
                            Id = 4,
                            Rating = 9.0,
                            Title = "The Dark Knight",
                            Year = 2008
                        },
                        new
                        {
                            Id = 5,
                            Rating = 9.1999999999999993,
                            Title = "The Godfather",
                            Year = 1972
                        },
                        new
                        {
                            Id = 6,
                            Rating = 7.7999999999999998,
                            Title = "Titanic",
                            Year = 1997
                        },
                        new
                        {
                            Id = 7,
                            Rating = 8.5,
                            Title = "Gladiator",
                            Year = 2000
                        },
                        new
                        {
                            Id = 8,
                            Rating = 8.9000000000000004,
                            Title = "The Lord of the Rings: The Return of the King",
                            Year = 2003
                        },
                        new
                        {
                            Id = 9,
                            Rating = 9.3000000000000007,
                            Title = "The Shawshank Redemption",
                            Year = 1994
                        },
                        new
                        {
                            Id = 10,
                            Rating = 8.8000000000000007,
                            Title = "Fight Club",
                            Year = 1999
                        },
                        new
                        {
                            Id = 11,
                            Rating = 8.8000000000000007,
                            Title = "Forrest Gump",
                            Year = 1994
                        },
                        new
                        {
                            Id = 12,
                            Rating = 8.5999999999999996,
                            Title = "Star Wars: Episode IV - A New Hope",
                            Year = 1977
                        },
                        new
                        {
                            Id = 13,
                            Rating = 7.9000000000000004,
                            Title = "Edward Scissorhands",
                            Year = 1990
                        });
                });

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.Property<int>("DirectorsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DirectorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("DirectorMovie");

                    b.HasData(
                        new
                        {
                            DirectorsId = 1,
                            MoviesId = 1
                        },
                        new
                        {
                            DirectorsId = 2,
                            MoviesId = 2
                        },
                        new
                        {
                            DirectorsId = 3,
                            MoviesId = 3
                        },
                        new
                        {
                            DirectorsId = 2,
                            MoviesId = 4
                        },
                        new
                        {
                            DirectorsId = 8,
                            MoviesId = 5
                        },
                        new
                        {
                            DirectorsId = 5,
                            MoviesId = 6
                        },
                        new
                        {
                            DirectorsId = 6,
                            MoviesId = 7
                        },
                        new
                        {
                            DirectorsId = 7,
                            MoviesId = 8
                        },
                        new
                        {
                            DirectorsId = 4,
                            MoviesId = 9
                        },
                        new
                        {
                            DirectorsId = 9,
                            MoviesId = 10
                        },
                        new
                        {
                            DirectorsId = 10,
                            MoviesId = 11
                        },
                        new
                        {
                            DirectorsId = 11,
                            MoviesId = 12
                        },
                        new
                        {
                            DirectorsId = 12,
                            MoviesId = 13
                        },
                        new
                        {
                            DirectorsId = 13,
                            MoviesId = 13
                        },
                        new
                        {
                            DirectorsId = 14,
                            MoviesId = 10
                        },
                        new
                        {
                            DirectorsId = 15,
                            MoviesId = 9
                        },
                        new
                        {
                            DirectorsId = 16,
                            MoviesId = 8
                        });
                });

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.HasOne("BeetleMovies.Director", null)
                        .WithMany()
                        .HasForeignKey("DirectorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeetleMovies.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
